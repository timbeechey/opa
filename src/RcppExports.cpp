// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// c_sign_with_threshold
IntegerVector c_sign_with_threshold(NumericVector xs, double diff_threshold);
RcppExport SEXP _opa_c_sign_with_threshold(SEXP xsSEXP, SEXP diff_thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< double >::type diff_threshold(diff_thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(c_sign_with_threshold(xs, diff_threshold));
    return rcpp_result_gen;
END_RCPP
}
// c_all_diffs
NumericVector c_all_diffs(NumericVector xs);
RcppExport SEXP _opa_c_all_diffs(SEXP xsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xs(xsSEXP);
    rcpp_result_gen = Rcpp::wrap(c_all_diffs(xs));
    return rcpp_result_gen;
END_RCPP
}
// c_random_shuffles
NumericMatrix c_random_shuffles(int n, NumericVector v);
RcppExport SEXP _opa_c_random_shuffles(SEXP nSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(c_random_shuffles(n, v));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_opa_c_sign_with_threshold", (DL_FUNC) &_opa_c_sign_with_threshold, 2},
    {"_opa_c_all_diffs", (DL_FUNC) &_opa_c_all_diffs, 1},
    {"_opa_c_random_shuffles", (DL_FUNC) &_opa_c_random_shuffles, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_opa(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
